name: C# Tests

on:
  workflow_call:
    inputs:
      safe-checkout:
        required: true
        description: "The SHA key for the commit we want to run over"
        type: string

jobs:
  linux:
    name: Linux
    runs-on: ubuntu-latest
    steps:
      - name: Checkout pending changes
        uses: actions/checkout@ac593985615ec2ede58e132d2e21d2b1cbd6127c # v3.3.0
        with:
          ref: ${{ inputs.safe-checkout }}
      - name: Run tests
        uses: ./.github/actions/bazel-docker
        with:
          image: us-docker.pkg.dev/protobuf-build/containers/test/linux/csharp:3.1.415-6.0.100-65526ea124d1034eac33e7c37cc6d65c5bef054f
          credentials: ${{ secrets.GAR_SERVICE_ACCOUNT }}
          bazel-cache: csharp_linux
          bazel: test //csharp/... --action_env=DOTNET_CLI_TELEMETRY_OPTOUT=1 --test_env=DOTNET_CLI_HOME=/home/bazel

  windows:
    name: Windows
    runs-on: windows-2019
    steps:
      - name: Checkout pending changes
        uses: actions/checkout@ac593985615ec2ede58e132d2e21d2b1cbd6127c # v3.3.0
        with:
          ref: ${{ inputs.safe-checkout }}

      - name: Run tests
        shell: cmd
        run: |
          cd csharp

          @rem Install dotnet SDK
          powershell -File install_dotnet_sdk.ps1
          set PATH=%LOCALAPPDATA%\Microsoft\dotnet;%PATH%

          @rem Disable some unwanted dotnet options
          set DOTNET_SKIP_FIRST_TIME_EXPERIENCE=true
          set DOTNET_CLI_TELEMETRY_OPTOUT=true

          @rem Work around https://github.com/dotnet/core/issues/5881
          dotnet nuget locals all --clear

          call buildall.bat

  # TODO(b/267672925) Simplify this with cross-compilation + emulation.
  linux-aarch64:
    name: Linux aarch64
    runs-on: ubuntu-latest
    steps:
      - name: Checkout pending changes
        uses: actions/checkout@ac593985615ec2ede58e132d2e21d2b1cbd6127c # v3.3.0
        with:
          ref: ${{ inputs.safe-checkout }}

      - name: Build protobuf C# tests under x86_64 docker image
        uses: ./.github/actions/docker
        with:
          image: mcr.microsoft.com/dotnet/sdk:6.0.100-bullseye-slim
          credentials: ${{ secrets.GAR_SERVICE_ACCOUNT }}
          command: >-
            DOTNET_CLI_TELEMETRY_OPTOUT=true
            DOTNET_SKIP_FIRST_TIME_EXPERIENCE=true
            dotnet publish -c Release -f net60 /workspace/csharp/src/Google.Protobuf.Test/Google.Protobuf.Test.csproj

      - name: Use an actual aarch64 docker image to run protobuf C# tests with an emulator
        uses: ./.github/actions/docker
        with:
          image: mcr.microsoft.com/dotnet/sdk:6.0.100-bullseye-slim-arm64v8
          credentials: ${{ secrets.GAR_SERVICE_ACCOUNT }}
          command: >-
            DOTNET_CLI_TELEMETRY_OPTOUT=true
            DOTNET_SKIP_FIRST_TIME_EXPERIENCE=true
            dotnet vstest /workspace/csharp/src/Google.Protobuf.Test/bin/Release/net60/publish/Google.Protobuf.Test.dll
